@model dynamic

@{
    ViewBag.Title = "Nova locação";
}

<h2>Nova locação</h2>


<form id="newRental">
    <div class="form-group">
        <label>Cliente</label>
        <div class="tt-container">
            <input id="customer" name="customer"  data-rule-validCustomer="true" required type="text" value="" class="form-control" />
        </div>
    </div>
    
    <div class="form-group">
        <label>Filme</label>
        <div class="tt-container">
            <input id="movie" name="movie" data-rule-atLeastOneMovie="true" type="text" value="" class="form-control" />
        </div>
    </div>
    
    <div class="row">
        <div class="col-sm-4">
            <ul id="movies" class="list-group">

            </ul>
        </div>
    </div>

    
    <button class="btn btn-primary">Submit</button>
</form>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function() {
            let vm = {
                movieIds: []
            };

            //CUSTOMERS TYPEAHEAD
            const customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '../api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({
                    highlight: true
                },
                {
                    name: 'customers',
                    display: 'name',
                    source: customers
                }).on("typeahead:select",
                function(e, customer) {
                    vm.customerId = customer.id;
                });

            //MOVIES TYPEAHEAD
            const movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '../api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead({
                    highlight: true
                },
                {
                    name: 'movies',
                    display: 'name',
                    source: movies
                }
            ).on("typeahead:select",
                function(e, movie) {
                    $("#movies").append($("<li>").html(movie.name).addClass("list-group-item"));

                    $('#movie').typeahead("val", "");

                    vm.movieIds.push(movie.id);
                });

            $.validator.setDefaults({
                ignore: ':hidden, .tt-hint'
            });

            $.validator.addMethod('validCustomer',
                function () {
                    return vm.customerId && vm.customerId !== 0;
                }, 'Por favor, selecione um cliente válido.');

            $.validator.addMethod('atLeastOneMovie', function() {
                return vm.movieIds.length > 0;
            }, 'Por favor, selecione, ao menos, um filme.');

            const validator = $('#newRental').validate({
                submitHandler: function() {
                    $.ajax({
                            url: '/api/Rentals',
                            method: 'post',
                            data: vm
                    })
                    .done(function() {
                        toastr.success('Locação cadastrada com sucesso!');

                        $("#customer").typeahead("val", "");
                        $("#movie").typeahead("val", "");
                        $("#movies").empty();

                        vm = { moviesIds: [] };

                        validator.resetForm();
                        })
                    .fail(function() {
                        toastr.error('Algum erro inexperado ocorreu.');
                    });

                    return false;
                }
            });

        });

    </script>
}
